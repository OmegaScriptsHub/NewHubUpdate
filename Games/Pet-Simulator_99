-- Config
getgenv().Autousecrystal = true
getgenv().ConvertSecretKey = true
getgenv().Autospinwheel = true
getgenv().Fishing = true
getgenv().AutoPresent = true
getgenv().Autocombinecrystal = true
getgenv().AutoCombineTech = true
getgenv().AutocombineSec = true
getgenv().Autouseprison = true
getgenv().Autousetech = true

-- Utility function to invoke a server method with arguments
local function invokeServerMethod(service, method, args)
    game:GetService("ReplicatedStorage").Network:FindFirstChild(service):InvokeServer(unpack(args or {}))
end

-- Functions
function Autocombinecrystal()
    while getgenv().Autocombinecrystal do
        task.wait()
        -- Add code here
    end
end

function Autocombinetech()
    while getgenv().AutoCombineTech do
        task.wait()
        -- Add code here
    end
end

function AutoCombineSec()
    while getgenv().AutocombineSec do
        task.wait()
        -- Add code here
    end
end

function Autouseprison()
    while getgenv().Autouseprison do
        task.wait()
        -- Add code here
    end
end

function Autousetech()
    while getgenv().Autousetech do
        task.wait()
        -- Add code here
    end
end

function AutoPresent()
    local function findAndDestroyPresents()
        for _, present in pairs(game:GetService("Workspace").__THINGS.HiddenPresents:GetChildren()) do
            if present.Name ~= "Highlight" then
                local args = { "ID_" .. math.round(present.Position.X) .. "_" .. math.round(present.Position.Y) .. "_" .. math.round(present.Position.Z) }
                invokeServerMethod("Hidden Presents: Found", args)
                present:Destroy()
                task.wait()
            end
        end
    end

    findAndDestroyPresents()
    game:GetService("Workspace").__THINGS.HiddenPresents.ChildAdded:Connect(function(present)
        if present.Name ~= "Highlight" then
            local args = { "ID_" .. math.round(present.Position.X) .. "_" .. math.round(present.Position.Y) .. "_" .. math.round(present.Position.Z) }
            invokeServerMethod("Hidden Presents: Found", args)
            present:Destroy()
            task.wait()
        end
    end)
end

function Autousecrystal()
    while getgenv().Autousecrystal do
        invokeServerMethod("CrystalKey_Unlock")
        task.wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(508.063141, 11.8743114, -381.70578)
    end
end

function ConvertSecretKey()
    while getgenv().ConvertSecretKey do
        invokeServerMethod("SecretRoom_Unlock", { "Crystal Key Castle" })
        invokeServerMethod("Spinny Wheel: Request Spin", { "CrystalKeyWheel" })
        task.wait()
    end
end

function Autospinwheel()
    while getgenv().Autospinwheel do
        invokeServerMethod("Spinny Wheel: Request Spin", { "StarterWheel" })
        task.wait()
    end
end

function Autofish()
    local LocalPlayer = game:GetService("Players").LocalPlayer
    local Character = LocalPlayer.Character
    local rootpart = Character and Character:FindFirstChild("HumanoidRootPart")
    local inventory = require(game:GetService("ReplicatedStorage").Library.Client.Save).Get()["Inventory"]
    local currency = inventory.Currency

    while getgenv().Fishing do
        if not LocalPlayer or not Character or not rootpart then
            warn("Character or HumanoidRootPart not found. Skipping to next iteration.")
        else
            for _, v in pairs(currency) do
                if v.id == "Fishing" then
                    if v._am >= 100 and v._am <= 1000 then
                        invokeServerMethod("FishingMerchant_PurchaseRod", { "Sturdy Fishing Rod" })
                    elseif v._am >= 2499 and v._am <= 3000 then
                        invokeServerMethod("FishingMerchant_PurchaseRod", { "Advanced Fishing Rod" })
                    elseif v._am >= 24999 and v._am <= 99999 then
                        invokeServerMethod("FishingMerchant_PurchaseRod", { "Super Fishing Rod" })
                    elseif v._am >= 99999 and v._am <= 110000 then
                        invokeServerMethod("FishingMerchant_PurchaseRod", { "Pro Fishing Rod" })
                    end
                end
            end
            if LocalPlayer:FindFirstChild("Rod") then
                rootpart.CFrame = workspace.__THINGS.__INSTANCE_CONTAINER.Active.Fishing.Map["Water Floor"].CFrame
                task.wait()
            else
                task.wait(0.01)
                task.wait(10)

                local castArgs = {
                    "Fishing",
                    "RequestCast",
                    Vector3.new(1556.89599609375, 75.91529083251953, -3483.819091796875)
                }
                invokeServerMethod("Instancing_FireCustomFromClient", castArgs)
                task.wait()

                local clickArgs = { "Fishing", "Clicked" }
                invokeServerMethod("Instancing_InvokeCustomFromClient", clickArgs)
                task.wait()

                local reelArgs = { "Fishing", "RequestReel" }
                invokeServerMethod("Instancing_FireCustomFromClient", reelArgs)

                local rayArgs = {
                    Ray.new(Vector3.new(1576.2581787109375, 82.04830932617188, -3490.451416015625), Vector3.new(-0.8175914287567139, -0.5346305966377258, 0.21380895376205444)),
                    Vector3.new(1564.8128662109375, 75.91529083251953, -3487.606201171875)
                }
                invokeServerMethod("Click", rayArgs)
            end
        end

        if not workspace.__THINGS.__INSTANCE_CONTAINER.Active:FindFirstChild("Fishing") then
            rootpart.CFrame = workspace.__THINGS.Instances.Fishing.Teleports.Enter.CFrame
            task.wait(5)
            rootpart.CFrame = workspace.__THINGS.__INSTANCE_CONTAINER.Active.Fishing.Map["Water Floor"].CFrame
            task.wait(2)
            invokeServerMethod("Instancing_FireCustomFromClient", { "Fishing", "RequestCast", Vector3.new(1144.8623046875, 75.91413116455078, -3459.06005859375) })
            task.wait(0.01)
            invokeServerMethod("Click", { Ray.new(Vector3.new(1120.80029296875, 87.40489196777344, -3448.416748046875), Vector3.new(0.6880636215209961, -0.5191763639450073, 0.5069756507873535)), Vector3.new(1129.03662109375, 82.31732177734375, -3442.386962890625) })
            task.wait(0.3)
            invokeServerMethod("Instancing_FireCustomFromClient", { "Fishing", "RequestReel" })
        end
    end
end

-- UI Library Initialization
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
OrionLib:MakeNotification({
    Name = "Cumhub executed",
    Content = "thanks <3",
    Image = "rbxassetid://4483345998",
    Time = 5
})

local Window = OrionLib:MakeWindow({Name = "Cumhub PS99", HidePremium = false, SaveConfig = true, ConfigFolder = "Cumhub"})

-- Misc Tab
local Misc = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local KeySection = Misc:AddSection({ Name = "Misc" })

KeySection:AddToggle({
    Name = "Auto Use Crystal Key",
    Default = false,
    Callback = function(Value)
        getgenv().Autousecrystal = Value
        Autousecrystal()
    end
})
KeySection:AddToggle({
    Name = "Auto Convert Crystal Key",
    Default = false,
    Callback = function(Value)
        getgenv().ConvertSecretKey = Value
        ConvertSecretKey()
    end
})
KeySection:AddToggle({
    Name = "Auto Spinny Wheel",
    Default = false,
    Callback = function(Value)
        getgenv().Autospinwheel = Value
        Autospinwheel()
    end
})
KeySection:AddToggle({
    Name = "Auto Present",
    Default = false,
    Callback = function(Value)
        getgenv().AutoPresent = Value
        AutoPresent()
    end
})

-- Minigames Tab
local minigames = Window:MakeTab({
    Name = "Minigames",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local minigameSection = minigames:AddSection({ Name = "Minigames" })

minigameSection:AddToggle({
    Name = "Auto Fish",
    Default = false,
    Callback = function(Value)
        getgenv().Fishing = Value
        Autofish()
    end
})

OrionLib:Init()
