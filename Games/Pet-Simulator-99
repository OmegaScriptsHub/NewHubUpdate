

loadstring(game:HttpGet("https://raw.githubusercontent.com/1201for/V.G-Hub/main/Extras/Global"))()
VG.DisableConnection(Error)
VG.DisableConnection(Idled)

local Quests = {}
local Codes = {}
local Mobs = {}
local Bosses = {}
for i,v in next, Player.Quests:GetChildren() do
    if v:IsA("BoolValue") then
        table.insert(Quests, v.Name)
    end
end

for i,v in next, Player.Codes:GetChildren() do
    if v:IsA("BoolValue") then
        table.insert(Codes, v.Name)
    end
end

for i,v in next, Workspace.Live:GetChildren() do
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
        if not table.find(Mobs, v.Name) and not v:FindFirstChild("SetNetworkOwner") then
            table.insert(Mobs, v.Name)
        end
    end
end
for i,v in next, Workspace.Live:GetChildren() do
    if v:IsA("Model") and v:FindFirstChild("HumanoidRootPart") then
        if not table.find(Bosses, v.Name) and v:FindFirstChild("SetNetworkOwner") then
            table.insert(Bosses, v.Name)
        end
    end
end
Stepped:Connect(function()
    sethiddenproperty(Player, "SimulationRadius", 1000)
end)

local Hit = function(Mob)
    ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("BladeCombatRemote"):FireServer(false, Vector3.new(Mob.HumanoidRootPart.Position), CFrame.new(Mob.HumanoidRootPart.Position))
end

local GetWeapon = function()
    for i,v in next, Player.Backpack:GetChildren() do
        if v:IsA("Tool") and v:FindFirstChild("Combat Script") then
            VG.GetHumanoid():EquipTool(v)
        end
    end
end


local KillMob = function(MobName)
    for i,v in next, Workspace.Live:GetChildren() do
        if v.Name == MobName and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
            VG.Teleport(v.HumanoidRootPart.Position + Vector3.new(0, -6, 3))
            Hit(v)
            local Tool = Player.Character:FindFirstChildWhichIsA("Tool")
            if Tool and not Tool:FindFirstChild("Combat Script") then
                GetWeapon()
            elseif not Tool then
                GetWeapon()
            end
            if v.Humanoid.Health ~= v.Humanoid.MaxHealth then
                v.Humanoid.Health = 0
            end
        end
    end
end

local KillBoss = function()
    for i,v in next, Workspace.Live:GetChildren() do
        if table.find(Bosses, v.Name) and v:FindFirstChild("HumanoidRootPart") then
            if v:FindFirstChild("Humanoid") and v.Humanoid.Health ~= 0 then
                VG.Teleport(v.HumanoidRootPart.Position + Vector3.new(0,-5,0))
                local Tool = Player.Character:FindFirstChildWhichIsA("Tool")
                if not Tool and Tool:FindFirstChild("Combat Script") then
                    GetWeapon()
                end
                Hit(v)
            end
        end
    end
end
local GetQuest = function(Quest)
    if not Player.PlayerGui.Menu.QuestFrame.Visible then
        ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("ChangeQuestRemote"):FireServer(ReplicatedStorage:WaitForChild("Quests"):FindFirstChild(Quest))
    end
end

local BuyArmor = function()
    ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("BuyItemRemote"):FireServer("Random Armor")
end

local GetLegendaryBag = function()
    if #Player.Backpack:GetChildren() >= 10 then     
        BuyArmor()
        for i,v in next, Player.Backpack:GetChildren() do
            if v.Name == "Bag" and v:FindFirstChild("BagPart") then
                local Lol = v:FindFirstChild("Rarity", true)
                if Lol and (Lol.Text == "Legendary") then
                    VG.GetHumanoid():EquipTool(v)
                    for i = 1, 13 do
                        for j, v in next, Player.PlayerValues:GetChildren() do
                            if v.Name:match("ItemStorage" .. i) and v.Value == "" then wait(0.001)
                                ReplicatedStorage.RemoteEvents.ItemStorageRemote:FireServer(v.Name)
                            end
                        end
                    end
                    wait(3)
                elseif Lol and (Lol.Text ~= "Legendary") then
                    VG.GetHumanoid():EquipTool(v)
                    v:Destroy()
                end
            end
        end
    else
        ReplicatedStorage.RemoteEvents.BuyItemRemote:FireServer("Arrow")
    end
end

local HookMetaMethod = clonefunc(hookmetamethod)
local OldNameCall = nil
OldNameCall = HookMetaMethod(game, "__namecall", function(...)
    local Self, Args, Name = ..., {...}, getnamecallmethod
    if (Name == "Kick" or Name == "kick") and not checkcaller() then
        return
    end
    return OldNameCall(...)
end)
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
 
local Window = Fluent:CreateWindow({
    Title = "V.G Hub: Game " .. MarketplaceService:GetProductInfo(game.PlaceId).Name,
    SubTitle = "by DekuDimz",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.Delete -- Used when theres no MinimizeKeybind
})
 
 
local Tabs = {
    AutoFarm = Window:AddTab({ Title = "AutoFarm", Icon = "" }),
    Obbys = Window:AddTab({ Title = "Misc", Icon = "" }),
    AutoMinigame = Window:AddTab({ Title = "Auto Roll Stuff", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
 
}
 
local Options = Fluent.Options
 
do
    Fluent:Notify({
        Title = "V.G Hub Loaded",
        Content = "Congrats your using V.G Hub " .. Verison,
        SubContent = "", -- Optional
        Duration = 10 -- Set to nil to make the notification not disappear
    })
    local Toggle = Tabs.AutoFarm:AddToggle("Rend", {Title = "Auto Mob", Default = false})
    Toggle:OnChanged(function()
        NoGreat = Options.Rend.Value
        Stepped:Connect(function()
            if NoGreat then
                VG.NoClip()
            end
        end)
        spawn(function()
            while NoGreat and wait() do
                pcall(function()
                    KillMob(Mob)
                end)
            end
        end)
    end)
    local Dropdown = Tabs.AutoFarm:AddDropdown("Ds", {
        Title = "Mobs",
        Values = Mobs,
        Multi = false,
        Default = 1,
    })
 
    Dropdown:SetValue("")
 
    Dropdown:OnChanged(function(Value)
        Mob = Value
    end)
    local Toggle = Tabs.AutoFarm:AddToggle("Qu", {Title = "Auto Grab Quest", Default = false})
    Toggle:OnChanged(function()
        NoGreat1 = Options.Qu.Value
        spawn(function()
            while wait() and NoGreat1 do
                pcall(function()
                    GetQuest(TheQuest)
                end)
            end
        end)
    end)
    local Dropdown = Tabs.AutoFarm:AddDropdown("D2s", {
        Title = "Quests",
        Values = Quests,
        Multi = false,
        Default = 1,
    })
 
    Dropdown:SetValue("")
 
    Dropdown:OnChanged(function(Value)
        TheQuest = Value
    end)

    local Toggle = Tabs.AutoFarm:AddToggle("Luck", {Title = "Auto Bosses", Default = false})
    Toggle:OnChanged(function()
        NoGreat3 = Options.Luck.Value
        Stepped:Connect(function()
            if NoGreat then
                VG.NoClip()
            end
        end)
        spawn(function()
            while NoGreat3 and wait() do
                pcall(function()
                    KillBoss()
                end)
            end
        end)
    end)
    local Toggle = Tabs.AutoMinigame:AddToggle("Hehe", {Title = "Auto Legendary Armor", Default = false})
    Toggle:OnChanged(function()
        NoGreat4 = Options.Hehe.Value
        spawn(function()
            while wait() and NoGreat4 do
                pcall(function()
                    GetLegendaryBag()
                end)
            end
        end)
    end)
end
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
 
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
 
 
Window:SelectTab(1)
 
Fluent:Notify({
    Title = "V.G Hub",
    Content = "The script has been loaded.",
    Duration = 8
})
 
SaveManager:LoadAutoloadConfig()
